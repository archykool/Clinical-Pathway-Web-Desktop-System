{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\illness-front\\illness-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\illness-front\\illness-front\\src\\views\\illness\\IllnessDetail.vue?vue&type=template&id=3d299cd8&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\illness-front\\illness-front\\src\\views\\illness\\IllnessDetail.vue","mtime":1589104125982},{"path":"C:\\Users\\Administrator\\Desktop\\illness-front\\illness-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\illness-front\\illness-front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\illness-front\\illness-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\illness-front\\illness-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}